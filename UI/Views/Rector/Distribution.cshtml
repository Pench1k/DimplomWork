<div id="loadingSpinner" class="text-center my-5 py-5">
    <div class="spinner-grow text-primary" style="width: 3rem; height: 3rem;" role="status">
        <span class="visually-hidden">Загрузка...</span>
    </div>
    <p class="mt-3 text-muted">Загрузка паспортов компьютеров...</p>
</div>

<div id="alertContainer" class="container mt-3"></div>

<div class="container-fluid py-4" id="mainContent" style="display: none;">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="mb-0">
            <i class="bi bi-file-earmark-text me-2"></i>Распределение
        </h1>
    </div>

    <div class="card shadow-sm">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table id="passportTable" class="table table-hover align-middle mb-0">
                    <thead class="table-light">
                        <tr>
                            <th class="ps-4">Инв. номер</th>
                            <th>Ответственный</th>
                            <th>Склад</th>
                            <th>Дата поступления</th>
                            <th>Дата списания</th>
                            <th>Комплектующие</th>
                            <th>Статус</th>
                            <th class="text-end pe-4">Действия</th>
                        </tr>
                    </thead>
                    <tbody id="passportTableBody">
                        <!-- Данные будут загружаться динамически -->
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Модальное окно для просмотра паспорта -->
<div class="modal fade" id="passportModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Паспорт компьютера <span id="modalInventoryNumber"></span></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <!-- Основные компоненты -->
                    <div class="col-md-6 pe-4">
                        <h6 class="fw-bold mb-3 border-bottom pb-2">Основные компоненты</h6>
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item border-0 px-0 py-1 d-flex justify-content-between">
                                <span class="fw-bold" style="width: 160px;">Процессор:</span>
                                <span class="text-end" id="modalProcessor">—</span>
                            </li>
                            <li class="list-group-item border-0 px-0 py-1 d-flex justify-content-between">
                                <span class="fw-bold" style="width: 160px;">Материнская плата:</span>
                                <span class="text-end" id="modalMotherboard">—</span>
                            </li>
                            <li class="list-group-item border-0 px-0 py-1 d-flex justify-content-between">
                                <span class="fw-bold" style="width: 160px;">Оперативная память:</span>
                                <span class="text-end" id="modalRam">—</span>
                            </li>
                            <li class="list-group-item border-0 px-0 py-1 d-flex justify-content-between">
                                <span class="fw-bold" style="width: 160px;">Операционная система:</span>
                                <span class="text-end" id="modalOc">—</span>
                            </li>
                        </ul>
                    </div>

                    <!-- Периферия и дополнительные компоненты -->
                    <div class="col-md-6 ps-4">
                        <h6 class="fw-bold mb-3 border-bottom pb-2">Компоненты</h6>
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item border-0 px-0 py-1 d-flex justify-content-between">
                                <span class="fw-bold" style="width: 160px;">Накопитель:</span>
                                <span class="text-end" id="modalMemoryDisk">—</span>
                            </li>
                            <li class="list-group-item border-0 px-0 py-1 d-flex justify-content-between">
                                <span class="fw-bold" style="width: 160px;">Блок питания:</span>
                                <span class="text-end" id="modalPowerUnit">—</span>
                            </li>
                            <li class="list-group-item border-0 px-0 py-1 d-flex justify-content-between">
                                <span class="fw-bold" style="width: 160px;">Видеокарта:</span>
                                <span class="text-end" id="modalVideoCard">—</span>
                            </li>
                            <li class="list-group-item border-0 px-0 py-1 d-flex justify-content-between">
                                <span class="fw-bold" style="width: 160px;">Мышь:</span>
                                <span class="text-end" id="modalMouse">—</span>
                            </li>
                            <li class="list-group-item border-0 px-0 py-1 d-flex justify-content-between">
                                <span class="fw-bold" style="width: 160px;">Клавиатура:</span>
                                <span class="text-end" id="modalKeyboard">—</span>
                            </li>
                            <li class="list-group-item border-0 px-0 py-1 d-flex justify-content-between">
                                <span class="fw-bold" style="width: 160px;">Монитор:</span>
                                <span class="text-end" id="modalScreen">—</span>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Закрыть</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="distributionModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-light">
                <h5 class="modal-title">Распределение компьютера <span id="distComputerNumber"></span></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row g-3">
                    <div class="col-md-6">
                        <div class="card h-100">
                            <div class="card-header bg-light">
                                <h6 class="mb-0">Текущее расположение</h6>
                            </div>
                            <div class="card-body">
                                <div class="mb-3">
                                    <label class="form-label">Склад:</label>
                                    <input type="text" class="form-control" id="currentWarehouse" readonly>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="card h-100">
                            <div class="card-header bg-light">
                                <h6 class="mb-0">Новое расположение</h6>
                            </div>
                            <div class="card-body">
                                <div class="mb-3">
                                    <label class="form-label">Подразделение:</label>
                                    <select class="form-select" id="departmentSelect" onchange="loadDepartmentData(this.value)">
                                        <option value="">Выберите подразделение</option>
                                    </select>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Кабинет:</label>
                                    <select class="form-select" id="officeSelect" disabled>
                                        <option value="">Сначала выберите подразделение</option>
                                    </select>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Мат. ответственное лицо:</label>
                                    <select class="form-select" id="responsibleUserSelect" disabled>
                                        <option value="">Сначала выберите подразделение</option>
                                    </select>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Примечание:</label>
                                    <textarea class="form-control" id="distributionNote" rows="2"></textarea>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отмена</button>
                <button type="button" class="btn btn-primary" id="confirmDistributionBtn">Подтвердить распределение</button>
            </div>
        </div>
    </div>
</div>


<script>
    document.addEventListener('DOMContentLoaded', function() {
        fetch('https://localhost:5001/api/ComputerPassport/Rector', {credentials: 'include'})
            .then(response => response.json())
            .then(data => {
                document.getElementById('loadingSpinner').style.display = 'none';
                document.getElementById('mainContent').style.display = 'block';

                const tableBody = document.getElementById('passportTableBody');

                if (data.length === 0) {
                    tableBody.innerHTML = `
                        <tr>
                            <td colspan="8" class="text-center py-5 text-muted">
                                <i class="bi bi-pc display-4 opacity-50"></i>
                                <p class="mt-3">Компьютеры не найдены</p>
                            </td>
                        </tr>`;
                    return;
                }

                data.forEach(passport => {
                    const row = document.createElement('tr');

                    const debitDate = passport.dateOfDebit ? new Date(passport.dateOfDebit) : null;
                    const isExpired = debitDate && debitDate < new Date();
                    const dateClass = isExpired ? 'text-danger' : 'text-success';
                    const dateText = passport.dateOfDebit || '—';

                    row.innerHTML = `
                        <td class="ps-4 fw-bold">${passport.inventoryNumber}</td>
                        <td>${passport.userName}</td>
                        <td>${passport.warehouseName || 'Не указан'}</td>
                        <td>${passport.dateOfReceipt || '—'}</td>
                        <td class="${dateClass} fw-medium">${dateText}</td>
                        <td>
                            <div class="text-truncate" style="max-width: 200px;">
                                <small class="text-muted">Процессор:</small> ${passport.processorName || '—'}<br>
                                <small class="text-muted">Видеокарта:</small> ${passport.videoCardName || '—'}
                            </div>
                        </td>
                        <td><span class="badge bg-primary">${getStatusText(passport.computerPassportStatus)}</span></td>
                        <td class="text-end pe-4">
                            <button class="btn btn-sm btn-outline-primary me-2" onclick="showPassportModal(${JSON.stringify(passport).replace(/"/g, '&quot;')})">
                                <i class="bi bi-eye"></i> Просмотр
                            </button>
                            <button class="btn btn-sm btn-success" 
                                    onclick="openDistributionModal(${passport.id}, ${passport.warehouseId || 'null'}, '${passport.inventoryNumber}', '${passport.warehouseName || ''}')">
                                <i class="bi bi-send"></i> Распределить
                            </button>
                        </td>
                    `;

                    tableBody.appendChild(row);
                });
            })
            .catch(error => {
                console.error('Ошибка загрузки данных:', error);
                document.getElementById('loadingSpinner').style.display = 'none';
                showAlert('Ошибка загрузки данных', 'danger');
            });
    });


    // Остальные функции остаются без изменений
    function showPassportModal(passport) {
        document.getElementById('modalInventoryNumber').textContent = passport.inventoryNumber || '—';
        document.getElementById('modalProcessor').textContent = passport.processorName || '—';
        document.getElementById('modalMotherboard').textContent = passport.motherboardName || '—';
        document.getElementById('modalRam').textContent = passport.ramName || '—';
        document.getElementById('modalOc').textContent = passport.ocName || '—';
        document.getElementById('modalMemoryDisk').textContent = passport.memoryDiskName || '—';
        document.getElementById('modalPowerUnit').textContent = passport.powerUnitName || '—';
        document.getElementById('modalVideoCard').textContent = passport.videoCardName || '—';
        document.getElementById('modalMouse').textContent = passport.mouseName || '—';
        document.getElementById('modalKeyboard').textContent = passport.keyboardName || '—';
        document.getElementById('modalScreen').textContent = passport.screenName || '—';

        const modal = new bootstrap.Modal(document.getElementById('passportModal'));
        modal.show();
    }

    function getStatusText(status) {
        const statuses = {
            0: 'Готов к распределению',
            1: 'Списан',
            2: 'В ремонте'
        };
        return statuses[status] || 'Неизвестно';
    }

    function showAlert(message, type) {
            const alertContainer = document.getElementById('alertContainer');
            const alert = document.createElement('div');
            alert.className = `alert alert-${type} alert-dismissible fade show`;
            alert.role = 'alert';
            alert.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            `;
            alertContainer.appendChild(alert);
        }

        let currentDistributionData = {
        computerId: null,
        warehouseId: null
    };

function openDistributionModal(computerId, warehouseId, inventoryNumber, warehouseName) {
        currentDistributionData = {
            computerId: computerId,
            warehouseId: warehouseId
        };
        
        // Заполняем информацию
        document.getElementById('distComputerNumber').textContent = inventoryNumber;
        document.getElementById('currentWarehouse').value = warehouseName || 'Не указан';
        
        // Загружаем подразделения
        fetch('https://localhost:5001/api/Department', { credentials: 'include' })
            .then(response => response.json())
            .then(departments => {
                const select = document.getElementById('departmentSelect');
                select.innerHTML = '<option value="">Выберите подразделение</option>';
                
                departments.forEach(dept => {
                    const option = document.createElement('option');
                    option.value = dept.id;
                    option.textContent = dept.name;
                    select.appendChild(option);
                });
                
                // Показываем модальное окно
                new bootstrap.Modal(document.getElementById('distributionModal')).show();
            });
    }

    function loadDepartmentData(departmentId) {
        if (!departmentId) {
            document.getElementById('officeSelect').innerHTML = '<option value="">Сначала выберите подразделение</option>';
            document.getElementById('officeSelect').disabled = true;
            document.getElementById('responsibleUserSelect').innerHTML = '<option value="">Сначала выберите подразделение</option>';
            document.getElementById('responsibleUserSelect').disabled = true;
            return;
        }
        
        // Загружаем кабинеты
        fetch(`https://localhost:5001/api/Office/ByDepartment/${departmentId}`, { 
            credentials: 'include' 
        })
        .then(response => response.json())
        .then(offices => {
            const officeSelect = document.getElementById('officeSelect');
            officeSelect.innerHTML = '';
            
            // Фильтруем кабинеты - оставляем только с availableSeats > 0
            const availableOffices = offices.filter(office => office.numberOfAvailableSeats > 0);
            
            if (availableOffices.length === 0) {
                const option = document.createElement('option');
                option.value = '';
                option.textContent = 'Нет доступных кабинетов (все заняты)';
                officeSelect.appendChild(option);
                officeSelect.disabled = true;
            } else {
                availableOffices.forEach(office => {
                    const option = document.createElement('option');
                    option.value = office.id;
                    option.textContent = `${office.body}-${office.number} (Свободно мест: ${office.numberOfAvailableSeats})`;
                    option.dataset.seats = office.numberOfAvailableSeats; // Сохраняем кол-во мест в data-атрибуте
                    
                    // Можно добавить визуальное выделение кабинетов с малым числом мест
                    if (office.numberOfAvailableSeats < 3) {
                        option.style.color = 'orange'; // Выделение цветом
                    }
                    
                    officeSelect.appendChild(option);
                });
                officeSelect.disabled = false;
            }
        })
        .catch(error => {
            console.error('Ошибка загрузки кабинетов:', error);
            const officeSelect = document.getElementById('officeSelect');
            officeSelect.innerHTML = '<option value="">Ошибка загрузки данных</option>';
            officeSelect.disabled = true;
        });
        
        // Загружаем пользователей подразделения
        fetch(`https://localhost:5001/api/account/ByDepartment/${departmentId}`, { credentials: 'include' })
            .then(response => response.json())
            .then(users => {
                const userSelect = document.getElementById('responsibleUserSelect');
                userSelect.innerHTML = '';
                
                if (users.length === 0) {
                    const option = document.createElement('option');
                    option.value = '';
                    option.textContent = 'Нет пользователей в подразделении';
                    userSelect.appendChild(option);
                    userSelect.disabled = true;
                } else {
                    users.forEach(user => {
                        const option = document.createElement('option');
                        option.value = user.id;
                        option.textContent = `${user.fullName})`;
                        userSelect.appendChild(option);
                    });
                    userSelect.disabled = false;
                }
            });
    }

    // Обновленный обработчик подтверждения распределения
    document.getElementById('confirmDistributionBtn').addEventListener('click', function() {
        const officeId = document.getElementById('officeSelect').value;
        const responsibleUserId = document.getElementById('responsibleUserSelect').value;
        const note = document.getElementById('distributionNote').value;
        
        if (!officeId) {
            showAlert('Пожалуйста, выберите кабинет', 'warning');
            return;
        }
        
        if (!responsibleUserId) {
            showAlert('Пожалуйста, выберите материально ответственное лицо', 'warning');
            return;
        }
        
        const distributionData = {
            ComputerPassportId: currentDistributionData.computerId,
            WarehouseId: currentDistributionData.warehouseId,
            OfficeId: officeId,
            ResponsibleUserId: responsibleUserId, // Добавляем ответственного
            Note: note,
        };
        
        fetch('/api/ArrivalFromTheWarehouse', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(distributionData),
            credentials: 'include'
        })
        .then(response => {
            if (response.ok) {
                showAlert('Компьютер успешно распределен', 'success');
                bootstrap.Modal.getInstance(document.getElementById('distributionModal')).hide();
                // Обновляем таблицу
                document.getElementById('passportTableBody').innerHTML = '';
                loadComputerPassports();
            } else {
                throw new Error('Ошибка распределения');
            }
        })
        .catch(error => {
            console.error('Ошибка:', error);
            showAlert('Ошибка при распределении компьютера: ' + error.message, 'danger');
        });
    });

</script>
