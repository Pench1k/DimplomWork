<div id="loadingSpinner" class="text-center my-5 py-5">
    <div class="spinner-grow text-primary" style="width: 3rem; height: 3rem;" role="status">
        <span class="visually-hidden">Загрузка...</span>
    </div>
    <p class="mt-3 text-muted">Загрузка заявок на прием...</p>
</div>

<div id="alertContainer" class="container mt-3"></div>

<div class="container-fluid py-4" id="mainContent" style="display: none;">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="mb-0">
            <i class="bi bi-clipboard-check me-2"></i>Заявки на прием компьютеров
        </h1>
    </div>

    <div class="card shadow-sm">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table id="requestsTable" class="table table-hover align-middle mb-0">
                    <thead class="table-light">
                        <tr>
                            <th class="ps-4">Инв. номер</th>
                            <th>Подразделение</th>
                            <th>Кабинет</th>
                            <th class="text-end pe-4">Действия</th>
                        </tr>
                    </thead>
                    <tbody id="requestsTableBody">
                        <!-- Данные будут загружаться динамически -->
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        loadDistributionRequests();
    });

    function loadDistributionRequests() {
        fetch('https://localhost:5001/api/ArrivalFromTheWarehouse/AcceptMethodist', {
            credentials: 'include'
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Ошибка загрузки данных');
                }
                return response.json();
            })
            .then(data => {
                document.getElementById('loadingSpinner').style.display = 'none';
                document.getElementById('mainContent').style.display = 'block';
                renderRequestsTable(data);
            })
            .catch(error => {
                console.error('Ошибка:', error);
                document.getElementById('loadingSpinner').style.display = 'none';
                showAlert('Ошибка загрузки заявок: ' + error.message, 'danger');
            });
    }

    function renderRequestsTable(requests) {
        const tableBody = document.getElementById('requestsTableBody');
        tableBody.innerHTML = '';

        if (requests.length === 0) {
            tableBody.innerHTML = `
                    <tr>
                        <td colspan="4" class="text-center py-5 text-muted">
                            <i class="bi bi-inbox display-4 opacity-50"></i>
                            <p class="mt-3">Нет заявок на распределение</p>
                        </td>
                    </tr>`;
            return;
        }

        requests.forEach(request => {
            const row = document.createElement('tr');

            // Формируем информацию о кабинете
            const officeInfo = request.body && request.number
                ? `${request.body}-${request.number}`
                : 'Не указан';

            row.innerHTML = `
                    <td class="ps-4 fw-bold">${request.inventoryNumber || '—'}</td>
                    <td>${request.departmentName || 'Не указано'}</td>
                    <td>${officeInfo}</td>
                    <td class="text-end pe-4">
                        <button class="btn btn-sm btn-success me-2"
                                onclick="processRequest(${request.id}, true)">
                            <i class="bi bi-check-circle"></i> Принять
                        </button>
                        <button class="btn btn-sm btn-danger"
                                onclick="processRequest(${request.id}, false)">
                            <i class="bi bi-x-circle"></i> Отклонить
                        </button>
                    </td>
                `;

            tableBody.appendChild(row);
        });
    }

    function processRequest(requestId, isApproved) {
        const endpoint = isApproved
            ? `https://localhost:5001/api/ArrivalFromTheWarehouse/AcceptMethodist/${requestId}`
            : `https://localhost:5001/api/ArrivalFromTheWarehouse/RejectMethodist/${requestId}`;

        fetch(endpoint, {
            method: 'PUT',
            credentials: 'include'
        })
            .then(response => {
                if (!response.ok) {
                    return response.json().then(err => {
                        throw new Error(err.message || 'Ошибка обработки запроса');
                    });
                }
                return response.json();
            })
            .then(data => {
                showAlert(isApproved ? 'Заявка принята' : 'Заявка отклонена', 'success');
                loadDistributionRequests(); // Обновляем таблицу
            })
            .catch(error => {
                console.error('Ошибка:', error);
                showAlert('Ошибка: ' + error.message, 'danger');
            });
    }

    function showAlert(message, type) {
        const alertContainer = document.getElementById('alertContainer');
        const alert = document.createElement('div');
        alert.className = `alert alert-${type} alert-dismissible fade show`;
        alert.role = 'alert';
        alert.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            `;
        alertContainer.appendChild(alert);

        setTimeout(() => {
            alert.remove();
        }, 5000);
    }
</script>
