<div id="loadingSpinner" class="text-center my-5 py-5">
    <div class="spinner-grow text-primary" style="width: 3rem; height: 3rem;" role="status">
        <span class="visually-hidden">Загрузка...</span>
    </div>
    <p class="mt-3 text-muted">Загрузка приходов...</p>
</div>

<div id="alertContainer" class="container mt-3"></div>
<div class="container-fluid py-4" id="mainContent" style="display: none;">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="mb-0">
            <i class="bi bi-box-seam me-2"></i>Регистрация прихода
        </h2>
        <div>
            <button id="buttonAdd" class="btn btn-success btn-lg rounded-pill px-4" onclick="addComing()">
                <i class="bi bi-plus-circle me-2"></i>Добавить приход
            </button>
        </div>
    </div>

    <div class="card shadow-sm mb-4">
        <div class="card-body py-3">
            <div class="row g-3">
                <div class="col-md-6">
                    <div class="input-group input-group-lg">
                        <span class="input-group-text bg-transparent border-0">
                            <i class="bi bi-search text-muted"></i>
                        </span>
                        <input type="text" id="searchInput" class="form-control border-0 ps-0" placeholder="Поиск по поставщику...">
                        <button id="resetSearch" class="btn btn-outline-secondary" type="button" title="Сбросить поиск">
                            <i class="bi bi-x-lg"></i>
                        </button>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="input-group input-group-lg">
                        <span class="input-group-text bg-transparent border-0">
                            <i class="bi bi-calendar text-muted"></i>
                        </span>
                        <input type="date" id="dateFilter" class="form-control border-0 ps-0" placeholder="Фильтр по дате...">
                        <button id="resetDate" class="btn btn-outline-secondary" type="button" title="Сбросить фильтр даты">
                            <i class="bi bi-x-lg"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="card shadow-sm">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table id="comingTable" class="table table-hover align-middle mb-0">
                    <thead class="table-light">
                        <tr>
                            <th class="ps-4">Поставщик</th>
                            <th>Дата прихода</th>
                            <th>Номер документа</th>
                            <th class="text-end pe-4">Действия</th>
                        </tr>
                    </thead>
                    <tbody id="comingTableBody">
                        <!-- Данные будут вставлены с помощью JavaScript -->
                    </tbody>
                </table>
                <!-- Блок для отображения когда приходов нет -->
                <div id="emptyComingMessage" class="text-center py-5" style="display: none;">
                    <i class="bi bi-box-seam" style="font-size: 2rem;"></i>
                    <h5 class="mt-3">Приходы не найдены</h5>
                    <p class="text-muted">Нажмите "Добавить приход" чтобы создать новый</p>
                    <button class="btn btn-primary mt-3" onclick="addComing()">
                        <i class="bi bi-plus-circle me-2"></i>Добавить первый приход
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="text-muted mt-3 text-center small">
        <i class="bi bi-info-circle me-1"></i> Всего приходов: <span id="comingCount">0</span>
    </div>
</div>

<!-- Модальное окно добавления прихода -->
<div class="modal fade" id="addComingModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title">
                    <i class="bi bi-box-seam me-2"></i>Добавить приход
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addComingForm">
                    <div class="mb-3">
                        <label for="provider" class="form-label">Поставщик*</label>
                        <input type="text" class="form-control" id="provider" required>
                        <div class="invalid-feedback">Пожалуйста, укажите поставщика</div>
                    </div>
                    <div class="mb-3">
                        <label for="documentNumber" class="form-label">Номер документа*</label>
                        <input type="text" class="form-control" id="documentNumber" required>
                        <div class="invalid-feedback">Пожалуйста, укажите номер документа</div>
                    </div>
                    <div class="mb-3">
                        <label for="dateOfComing" class="form-label">Дата прихода*</label>
                        <input type="date" class="form-control" id="dateOfComing" required>
                        <div class="invalid-feedback">Пожалуйста, укажите дату прихода</div>
                    </div>
                    <div class="alert alert-info">
                        <i class="bi bi-person-check me-2"></i>
                        Ответственный: <strong id="currentUserInfo">Вы (текущий пользователь)</strong>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отмена</button>
                <button type="button" class="btn btn-primary" id="saveComingBtn">
                    <span class="spinner-border spinner-border-sm d-none" id="saveSpinner"></span>
                    <span id="saveBtnText">Сохранить</span>
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Модальное окно редактирования прихода -->
<div class="modal fade" id="editComingModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title">
                    <i class="bi bi-box-seam me-2"></i>Редактировать приход
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editComingForm">
                    <input type="hidden" id="editComingId">
                    <div class="mb-3">
                        <label for="editProvider" class="form-label">Поставщик*</label>
                        <input type="text" class="form-control" id="editProvider" required>
                        <div class="invalid-feedback">Пожалуйста, укажите поставщика</div>
                    </div>
                    <div class="mb-3">
                        <label for="editDocumentNumber" class="form-label">Номер документа*</label>
                        <input type="text" class="form-control" id="editDocumentNumber" required>
                        <div class="invalid-feedback">Пожалуйста, укажите номер документа</div>
                    </div>
                    <div class="mb-3">
                        <label for="editDateOfComing" class="form-label">Дата прихода*</label>
                        <input type="date" class="form-control" id="editDateOfComing" required>
                        <div class="invalid-feedback">Пожалуйста, укажите дату прихода</div>
                    </div>
                    <div class="alert alert-info">
                        <i class="bi bi-person-check me-2"></i>
                        Ответственный: <strong id="editUserInfo">[Пользователь]</strong>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отмена</button>
                <button type="button" class="btn btn-primary" id="updateComingBtn">
                    <span class="spinner-border spinner-border-sm d-none" id="updateSpinner"></span>
                    <span id="updateBtnText">Сохранить изменения</span>
                </button>
            </div>
        </div>
    </div>
</div>

<script>
    let allComings = [];

    $(document).ready(function () {
        loadComings();
        setupEventListeners();
    });

    function setupEventListeners() {
        $('#saveComingBtn').click(saveComing);
        $('#updateComingBtn').click(updateComing);
        $('#searchInput').keyup(function() {
            filterTable($(this).val().toLowerCase());
        });
        $('#resetSearch').click(function() {
            $('#searchInput').val('');
            filterTable('');
        });
        $('#dateFilter').change(function() {
            filterTable($('#searchInput').val().toLowerCase());
        });
        $('#resetDate').click(function() {
            $('#dateFilter').val('');
            filterTable($('#searchInput').val().toLowerCase());
        });
    }

    function loadComings() {
        $('#loadingSpinner').show();
        $('#mainContent').hide();

        $.ajax({
            url: 'https://localhost:5001/api/Coming',
            method: 'GET',
            xhrFields: { withCredentials: true },
            success: function (data) {
                allComings = data;
                updateTable(data);
            },
            error: function (xhr) {
                console.error('Ошибка получения данных:', xhr);
                showAlert('Ошибка загрузки данных. Пожалуйста, попробуйте позже.', 'danger');
                $('#loadingSpinner').hide();
            }
        });
    }

    function updateTable(comings) {
        const tableBody = $("#comingTableBody");
        tableBody.empty();

        if (comings.length === 0) {
            $("#comingTable").hide();
            $("#emptyComingMessage").show();
        } else {
            $("#comingTable").show();
            $("#emptyComingMessage").hide();

            comings.forEach(function(coming) {
                const row = `
                    <tr>
                        <td class="ps-4">${coming.provider || 'Не указано'}</td>
                        <td>${formatDate(coming.dateOfComing)}</td>
                        <td>${coming.documentNumber || 'Не указано'}</td>
                        <td class="text-end pe-4">
                            <button class="btn btn-sm btn-outline-warning me-2 rounded-pill px-3" onclick="editComing(${coming.id})">
                                <i class="bi bi-pencil me-1"></i>Изменить
                            </button>
                            <button class="btn btn-sm btn-outline-danger rounded-pill px-3" onclick="deleteComing(${coming.id}, '${(coming.provider || '').replace("'", "\\'")}')">
                                <i class="bi bi-trash me-1"></i>Удалить
                            </button>
                        </td>
                    </tr>
                `;
                tableBody.append(row);
            });
        }

        $("#comingCount").text(comings.length);
        $("#loadingSpinner").hide();
        $("#mainContent").fadeIn(300);
    }

      function filterTable(searchText) {
          const dateFilter = $('#dateFilter').val();
          
          let filtered = allComings;
          
          if (searchText) {
              filtered = filtered.filter(coming => 
                  coming.provider && coming.provider.toLowerCase().includes(searchText)
              );
          }
          
          if (dateFilter) {
              filtered = filtered.filter(coming => 
                  coming.dateOfComing && coming.dateOfComing.split('T')[0] === dateFilter
              );
          }
          
          updateTable(filtered);
    }

    function formatDate(dateString) {
        if (!dateString) return 'Не указана';
        const options = { year: 'numeric', month: 'long', day: 'numeric' };
        return new Date(dateString).toLocaleDateString('ru-RU', options);
    }

    function addComing() {
        $('#addComingForm')[0].reset();
        $('#dateOfComing').val(new Date().toISOString().split('T')[0]);
        $('#provider, #documentNumber, #dateOfComing').removeClass('is-invalid');
        $('#addComingModal').modal('show');
    }

    function saveComing() {
        const provider = $('#provider').val().trim();
        const documentNumber = $('#documentNumber').val().trim();
        const dateOfComing = $('#dateOfComing').val();

        // Валидация
        let isValid = true;
        if (!provider) {
            $('#provider').addClass('is-invalid');
            isValid = false;
        }
        if (!documentNumber) {
            $('#documentNumber').addClass('is-invalid');
            isValid = false;
        }
        if (!dateOfComing) {
            $('#dateOfComing').addClass('is-invalid');
            isValid = false;
        }
        if (!isValid) return;

        const $btn = $('#saveComingBtn');
        $btn.prop('disabled', true);
        $('#saveSpinner').removeClass('d-none');
        $('#saveBtnText').text('Сохранение...');

        const comingData = {
            provider: provider,
            documentNumber: documentNumber,
            dateOfComing: dateOfComing
        };

        $.ajax({
            url: 'https://localhost:5001/api/Coming',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(comingData),
            xhrFields: { withCredentials: true },
            success: function() {
                $('#addComingModal').modal('hide');
                showAlert('Приход успешно добавлен', 'success');
                loadComings();
            },
            error: function(xhr) {
                const errorMsg = xhr.responseJSON?.message || xhr.statusText;
                showAlert('Ошибка при сохранении: ' + errorMsg, 'danger');
            },
            complete: function() {
                $('#saveSpinner').addClass('d-none');
                $('#saveBtnText').text('Сохранить');
                $btn.prop('disabled', false);
            }
        });
    }

    function editComing(id) {
        const coming = allComings.find(c => c.id === id);
        if (!coming) {
            showAlert('Приход не найден', 'danger');
            return;
        }

        $('#editComingForm')[0].reset();
        $('#editComingId').val(coming.id);
        $('#editProvider').val(coming.provider);
        $('#editDocumentNumber').val(coming.documentNumber);
        $('#editDateOfComing').val(coming.dateOfComing.split('T')[0]);
        $('#editProvider, #editDocumentNumber, #editDateOfComing').removeClass('is-invalid');
        $('#editComingModal').modal('show');
    }

    function updateComing() {
        const id = $('#editComingId').val();
        const provider = $('#editProvider').val().trim();
        const documentNumber = $('#editDocumentNumber').val().trim();
        const dateOfComing = $('#editDateOfComing').val();

        // Валидация
        let isValid = true;
        if (!provider) {
            $('#editProvider').addClass('is-invalid');
            isValid = false;
        }
        if (!documentNumber) {
            $('#editDocumentNumber').addClass('is-invalid');
            isValid = false;
        }
        if (!dateOfComing) {
            $('#editDateOfComing').addClass('is-invalid');
            isValid = false;
        }
        if (!isValid) return;

        const $btn = $('#updateComingBtn');
        $btn.prop('disabled', true);
        $('#updateSpinner').removeClass('d-none');
        $('#updateBtnText').text('Сохранение...');

        const comingData = {
            id: id,
            provider: provider,
            documentNumber: documentNumber,
            dateOfComing: dateOfComing
        };

        $.ajax({
            url: `https://localhost:5001/api/Coming/${id}`,
            type: 'PUT',
            contentType: 'application/json',
            data: JSON.stringify(comingData),
            xhrFields: { withCredentials: true },
            success: function() {
                $('#editComingModal').modal('hide');
                showAlert('Приход успешно обновлен', 'success');
                loadComings();
            },
            error: function(xhr) {
                const errorMsg = xhr.responseJSON?.message || 'Ошибка сервера';
                showAlert('Ошибка обновления: ' + errorMsg, 'danger');
            },
            complete: function() {
                $('#updateSpinner').addClass('d-none');
                $('#updateBtnText').text('Сохранить изменения');
                $btn.prop('disabled', false);
            }
        });
    }

    function deleteComing(id, name) {
        if (!confirm(`Вы точно хотите удалить приход "${name || 'без названия'}"?`)) return;

        $.ajax({
            url: `https://localhost:5001/api/coming/${id}`,
            type: 'DELETE',
            xhrFields: { withCredentials: true },
            success: function() {
                showAlert('Приход успешно удален', 'success');
                loadComings();
            },
            error: function(xhr) {
                showAlert('Ошибка при удалении: ' + (xhr.responseJSON?.message || xhr.statusText), 'danger');
            }
        });
    }

    function showAlert(message, type = 'success') {
        const alertHtml = `
            <div class="alert alert-${type} alert-dismissible fade show" role="alert">
                <i class="bi ${type === 'success' ? 'bi-check-circle' : 'bi-exclamation-triangle'} me-2"></i>
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>`;

        $('#alertContainer').html(alertHtml);
        setTimeout(() => $('.alert').alert('close'), 5000);
      }
        
</script>